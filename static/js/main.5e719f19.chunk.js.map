{"version":3,"sources":["logo.svg","features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","Logo","src","alt","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","ClearIcon","Section","title","description","backgroundImg","leftBtnText","rightBtnText","Wrap","bgImage","bottom","ItemText","Buttons","top","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e719f19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n    cars: [\"Model S\", \"Model 3\", \"Model X\", \"Model Y\"]\n}\n\nconst carSlice = createSlice({\n    name: \"car\",\n    initialState,\n    reducers: {}\n})\n\nexport const selectCars = state => state.car.cars\n\nexport default carSlice.reducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {selectCars } from '../features/car/carSlice';\nimport {useSelector} from 'react-redux'\n\n\nfunction Header() {\n    const [burgerStatus, setBurgerStatus] = useState(false);\n    //initially is the burger status is close ~ false\n    const cars = useSelector(selectCars)\n   \n    return (\n        <Container>\n            <Logo>\n                <a>\n                    <img src=\"/images/logo.svg\" alt=\"\" />\n                </a>\n            </Logo>\n            <Menu>\n                {cars && cars.map((car,index) => \n                    <a key={index} href=\"#\"> {car} </a>\n                )}\n                <a href=\"#\"> Solar Roof </a>\n                <a href=\"#\"> Solar Panel </a>\n            </Menu>\n\n            <RightMenu>\n                <a href = \"#\"> Shop</a> \n                <a href = \"#\"> Tesla Account</a>\n                <CustomMenu onClick={()=>setBurgerStatus(true)}/>\n            </RightMenu>\n\n            <BurgerNav show={burgerStatus}>\n                <CloseWrapper> \n                    <CustomClose onClick={()=>setBurgerStatus(false)}/>\n                </CloseWrapper>\n                {cars && cars.map((car,index) => \n                    <li key={index}><a  href=\"#\"> {car}</a></li>\n                )}\n                <li><a href=\"#\"> Existing Inventory</a></li>\n                <li><a href=\"#\"> Used Inventory</a></li>\n                <li><a href=\"#\"> Trade-in</a></li>\n                <li><a href=\"#\"> Cyber Truck</a></li>\n                <li><a href=\"#\"> Roadaster</a></li>     \n            </BurgerNav>\n\n        </Container>\n    )\n}\n\nexport default Header\n\nconst Container = styled.div `\n    min-height: 60px;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    top:0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    \n`\nconst Logo = styled.div`\n    cursor: pointer;\n`\n\nconst Menu = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n    @media (max-width: 768px){\n        display: none;\n    };\n    \n    a {\n        font-weight: 400;\n        text-transform: uppercase;\n        padding: 0 10px;\n        flex-wrap: nowrap;\n        @media (max-width: 960px){\n            font-weight: 400; \n            padding: 0 5px;\n            font-size: 12px;\n        }\n    }\n    \n    `\n\nconst RightMenu = styled.div`\n    display:flex;\n\n    a {\n        font-weight: 450;\n        text-transform: uppercase;\n        margin-right: 10px;\n        @media (max-width: 960px){\n            font-weight: 400; \n            padding: 0 5px;\n            font-size: 12px;  \n        }\n        @media (max-width: 768px){\n            display: none;  \n        }       \n    }\n\n`\n\nconst CustomMenu = styled(MenuIcon)`\n    cursor: pointer;\n   \n`\n\nconst BurgerNav = styled.div`\n    position: fixed; \n    //bcos it is always gonna be fixed, on the top right corner. \n    top:0;\n    right: 0;\n    bottom: 0;\n    background: white;\n    // opacity: 0.85;\n    width: 300px;   \n    z-index: 16;\n    list-style: none;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    text-align: start;\n    transform: ${props=> props.show ? 'translateX(0)' : 'translateX(100%)'};\n    //                               if  true          if  false move 100% to the right\n    //100% means expand 100%, 0 means no expand, show the menu bar\n    transition: transform 0.2s;\n    li {\n        padding: 15px 0;\n        border-bottom: 1px solid rgba(0,0,0,.2);\n        a{\n            font-weight: 600;\n        }\n    }\n\n`\n\nconst CustomClose = styled(ClearIcon)`\n    cursor: pointer;\n\n`\n\nconst CloseWrapper = styled.div`\n    display:flex;\n    justify-content: flex-end;\n\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\n\nfunction Section({title, description, backgroundImg, leftBtnText, rightBtnText}) {\n    \n    return (\n        <Wrap bgImage={backgroundImg}>\n            <Fade bottom> \n                <ItemText>\n                    <h1>{title}</h1>\n                    <p>{description}</p>\n                </ItemText>\n            </Fade>\n            <Buttons>\n                <Fade top> \n                        <ButtonGroup>                      \n                            <LeftButton>\n                                {leftBtnText}\n                            </LeftButton>\n                            {/* if the right button exits, then add the \n                            right button. if right button is 0 string, then \n                            no need to show.  */}\n                            { rightBtnText && \n                                <RightButton>\n                                    {rightBtnText}\n                                </RightButton>\n                            }             \n                        </ButtonGroup>\n                    </Fade>  \n                    < DownArrow src={\"./images/down-arrow.svg\"} />                      \n            </Buttons>\n            \n        </Wrap>\n    )\n}\n\nexport default Section\n\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: ${props => `url(\"/images/${props.bgImage}\")`};\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; \n    //vertical\n    align-items: center; //horizontal;\n\n`\n\nconst ItemText = styled.div` \n    padding-top: 15vh;\n    text-align: center;\n    // z-index: -1;\n    \n`\n\nconst ButtonGroup = styled.div `\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 600px){\n        flex-direction: column;\n    }\n`\n\nconst LeftButton = styled.div `\n    background-color: rgba(23,26,32,0.8);\n    height: 40px;\n    width: 256px;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    font-size: 12px;\n    cursor: pointer;\n    margin: 10px;\n    @media (max-width: 600px){ //nhi tu them vo!!!! qua hay\n        width: 92vw;\n        // align-items: center;\n        // margin: 10px;\n`   \n\nconst RightButton = styled(LeftButton) `\n    background-color: white;\n    color: black;\n    opacity:0.75;\n    // text-style: bold;\n    \n`\n\nconst DownArrow = styled.img`\n    height: 40px;\n    color: black;\n    animation: animateDown infinite 1.5s;\n`\n\nconst Buttons = styled.div``\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport Section from './Section';\n\n\nfunction Home() {\n    return (\n        <Container>\n            <Section \n                title=\"Model S\"\n                description= \"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-s.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"\n            />\n            <Section \n            title=\"Model Y\"\n            description= \"Order Online for Touchless Delivery\"\n            backgroundImg=\"model-y.jpg\"\n            leftBtnText=\"Custom Order\"\n            rightBtnText=\"Existing Inventory\"\n            />\n            <Section \n            title=\"Model 3\"\n            description= \"Order Online for Touchless Delivery\"\n            backgroundImg=\"model-3.jpg\"\n            leftBtnText=\"Custom Order\"\n            rightBtnText=\"Existing Inventory\"\n            />\n            <Section \n            title=\"Model X\"\n            description= \"Order Online for Touchless Delivery\"\n            backgroundImg=\"model-x.jpg\"\n            leftBtnText=\"Custom Order\"\n            rightBtnText=\"Existing Inventory\"\n            />\n            <Section \n            title=\"Lowest Cost Solar Panels in America\"\n            description= \"Money-back guarantee\"\n            backgroundImg=\"solar-panel.jpg\"\n            leftBtnText=\"Order Now\"\n            rightBtnText=\"Learn More\"\n            />\n            <Section \n            title=\"Solar for New Roofs\"\n            description= \"Solar Roof Costs Less Than a New Roof Plus Solar Panels\"\n            backgroundImg=\"solar-roof.jpg\"\n            leftBtnText=\"Order Now\"\n            rightBtnText=\"Learn More\"\n            />\n            <Section \n            title=\"Accessories\"\n            description= \"\"\n            backgroundImg=\"accessories.jpg\"\n            leftBtnText=\"Shop Now\"\n            rightBtnText=\"\"\n            />\n            \n            \n        </Container>\n    )\n}\n\nexport default Home\n\nconst Container = styled.div`\n    height: 100vh;\n    z-index: 10;\n`","import React from 'react';\nimport logo from './logo.svg';\n// import { Counter } from './features/counter/Counter';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />  \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/car/carSlice'\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}